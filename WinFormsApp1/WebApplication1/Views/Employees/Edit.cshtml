@model WebApplication1.Models.Employee
@using WebApplication1.Models

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployeeID)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitleID, "JobTitleID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("JobTitleID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobTitleID, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
    <br />
</div>
    }

    <div>
        <a href="@Url.Action("Index", "Employees")" class="btn btn-default">Back to List</a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@functions {
    private List<SelectListItem> GetJobTitles()
    {
        List<SelectListItem> jobTitles = new List<SelectListItem>();

        using (var db = new WinFormDbEntities())
        {
            jobTitles = db.JobTitles
                .Select(j => new SelectListItem
                {
                    Value = j.JobTitleID.ToString(),
                    Text = j.Title
                })
                .ToList();
        }

        return jobTitles;
    }
}